% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paf.R
\name{paf}
\alias{paf}
\title{Population Attributable Fraction}
\usage{
paf(X, thetahat, rr, weights = rep(1/nrow(as.matrix(X)), nrow(as.matrix(X))),
  method = c("empirical", "kernel", "approximate"), Xvar = var(X),
  deriv.method.args = list(), deriv.method = c("Richardson", "complex"),
  adjust = 1, n = 512, ktype = c("gaussian", "epanechnikov",
  "rectangular", "triangular", "biweight", "cosine", "optcosine"),
  bw = c("SJ", "nrd0", "nrd", "ucv", "bcv"), check_exposure = TRUE,
  check_rr = TRUE, check_integrals = TRUE)
}
\arguments{
\item{X}{Random sample (vector or matrix) which includes exposure and
covariates. or sample mean if approximate method is selected.}

\item{thetahat}{Estimator (vector or matrix) of \code{theta} for the 
Relative Risk function.}

\item{rr}{Function for Relative Risk which uses parameter 
\code{theta}. The order of the parameters shound be \code{rr(X, theta)}.


**Optional**}

\item{weights}{Normalized survey \code{weights} for the sample \code{X}.}

\item{method}{Either \code{empirical} (default), \code{kernel} or 
\code{approximate}.}

\item{Xvar}{Variance of exposure levels (for \code{approximate} method)}

\item{deriv.method.args}{\code{method.args} for 
\code{\link[numDeriv]{hessian}} (for \code{approximate} method).}

\item{deriv.method}{\code{method} for \code{\link[numDeriv]{hessian}}. 
Don't change this unless you know what you are doing (for 
\code{approximate} method).}

\item{adjust}{Adjust bandwith parameter from density (for \code{kernel} 
method) from \code{\link[stats]{density}}.}

\item{n}{Number of equally spaced points at which the density (for 
\code{kernel} method) is to be estimated (see 
\code{\link[stats]{density}}).}

\item{ktype}{\code{kernel} type:  \code{"gaussian"}, 
\code{"epanechnikov"}, \code{"rectangular"}, \code{"triangular"}, 
\code{"biweight"}, \code{"cosine"}, \code{"optcosine"} (for \code{kernel} 
method). Additional information on kernels in \code{\link[stats]{density}}}

\item{bw}{Smoothing bandwith parameter from density (for \code{kernel}
method) from \code{\link[stats]{density}}. Default \code{"SJ"}.}

\item{check_exposure}{Check that exposure \code{X} is positive and numeric}

\item{check_rr}{Check that Relative Risk function \code{rr} equals 
\code{1} when evaluated at \code{0}}

\item{check_integrals}{Check that counterfactual and relative risk's expected
values are well defined for this scenario}
}
\value{
paf      Estimate of Population Attributable Fraction
}
\description{
Function for estimating the Population Attributable Fraction
  \code{paf} from a cross-sectional sample of the exposure \code{X} with a
  known Relative Risk function \code{rr} with parameters \code{theta}.
}
\note{
\code{approximate} method should be the last choice. In practice 
  \code{empirical} should be prefered as convergence is faster than 
  \code{kernel} for most functions. In addition, the scope of \code{kernel} 
  is limited as it does not work with multivariate exposure data \code{X}.

\code{\link{paf}} is a wrapper for \code{\link{pif}} with
  counterfactual of \code{0} exposure
}
\examples{

#Example 1: Exponential Relative Risk
#--------------------------------------------
set.seed(18427)
X        <- rnorm(100,3,1)
thetahat <- 0.12
rr       <- function(X, theta){exp(theta*X)}

#Using the empirical method
paf(X, thetahat, rr)

#Same example with kernel method
paf(X, thetahat, rr, method = "kernel")

#Same example with approximate method
Xmean <- mean(X)
Xvar  <- var(X)
paf(Xmean, thetahat, rr, method = "approximate", Xvar = Xvar)

#Additional options for approximate:
paf(Xmean, thetahat, rr, method = "approximate", Xvar = Xvar, 
   deriv.method = "Richardson",  deriv.method.args = list(eps=1e-3, d=0.1))

#Example 2: Linear Relative Risk with weighted sample
#--------------------------------------------
set.seed(18427)
X                   <- rbeta(100,3,1)
weights             <- runif(100)
normalized_weights  <- weights/sum(weights)
thetahat            <- 0.12
rr                  <- function(X, theta){theta*X^2 + 1}
paf(X, thetahat, rr, weights = normalized_weights)

   
#Additional options for kernel:
paf(X, thetahat, rr, weights = normalized_weights, 
     method = "kernel", ktype = "cosine", bw = "nrd0")


#Example 3: Multivariate Linear Relative Risk
#--------------------------------------------
set.seed(18427)
X1       <- rnorm(100,4,1)
X2       <- rnorm(100,2,0.4)
X        <- as.matrix(cbind(X1,X2))
thetahat <- c(0.12, 0.03)
rr       <- function(X, theta){exp(theta[1]*X[,1] + theta[2]*X[,2])}
paf(X, thetahat, rr) 

#Same multivariate example for approximate method calculating mean and variance
Xmean <- colMeans(X)
Xvar  <- var(X)
paf(Xmean, thetahat, rr, method = "approximate", Xvar = Xvar)

\dontrun{
#Warning: Multivariate cases cannot be evaluated with kernel method
paf(X, thetahat, rr, method = "kernel") 
}

#Example 4: Categorical Relative Risk & Exposure
#--------------------------------------------
set.seed(18427)
X        <- sample(c("Normal","Overweight","Obese"), 100, 
                   replace = TRUE, prob = c(0.4, 0.1, 0.5))
thetahat <- c(1, 1.2, 1.5)

#Categorical relative risk function
rr <- function(X, theta){

   #Create return vector with default risk of 1
   r_risk <- rep(1, length(X))
   
   #Assign categorical relative risk
   r_risk[which(X == "Normal")]      <- thetahat[1]
   r_risk[which(X == "Overweight")]  <- thetahat[2]
   r_risk[which(X == "Obese")]       <- thetahat[3]
   
   return(r_risk)
}

paf(X, thetahat, rr, check_rr = FALSE)

#Example 5: Continuous Exposure and Categorical Relative Risk
#------------------------------------------------------------------
set.seed(18427)

#Assume we have BMI from a sample
BMI          <- rlnorm(100, 3.1, sdlog = 0.1)

#Theoretical minimum of 0 exposure is at 20 in borderline "Normal" category
BMI_adjusted <- BMI - 20

thetahat <- c(Malnourished = 2.2, Normal = 1, Overweight = 1.8, Obese = 2.5)
rr       <- function(X, theta){
     
     #Create return vector with default risk of 1
     r_risk <- rep(1, length(X))
   
     #Assign categorical relative risk
     r_risk[which(X < 0)]                             <- theta[1] #Malnourished
     r_risk[intersect(which(X >= 0), which(X < 5))]   <- theta[2] #Normal
     r_risk[intersect(which(X >= 5), which(X < 10))]  <- theta[3] #Overweight
     r_risk[which(X >= 10)]                           <- theta[4] #Obese
   
   return(r_risk)
}

paf(BMI_adjusted, thetahat, rr, check_rr = FALSE)

#Example 6: Bivariate exposure and rr ("classical PAF")
#------------------------------------------------------------------
set.seed(18427)
X     <- sample(c("Exposed","Unexposed"), 1000, replace = TRUE, prob = c(0.1, 0.9))
theta <- c("Exposed" = 2.5, "Unexposed" = 1.2)  
rr <- function(X, theta){
   
   #Create relative risk function
   r_risk <- rep(1, length(X))
   
   #Assign values of relative risk
   r_risk[which(X == "Unexposed")] <- theta["Unexposed"]
   r_risk[which(X == "Exposed")]   <- theta["Exposed"]
   
   return(r_risk)
}    

paf(X, theta, rr, check_rr = FALSE)

}
\author{
Rodrigo Zepeda Tello \email{rodrigo.zepeda@insp.mx}

Dalia Camacho García Formentí \email{daliaf172@gmail.com}
}
\references{
Vander Hoorn, S., Ezzati, M., Rodgers, A., Lopez, A. D., & 
  Murray, C. J. (2004). \emph{Estimating attributable burden of disease from 
  exposure and hazard data. Comparative quantification of health risks: 
  global and regional burden of disease attributable to selected major risk 
  factors}. Geneva: World Health Organization, 2129-40.
}
\seealso{
\code{\link{pif}} for Potential Impact Fraction estimation.
  
  See \code{\link{paf.exponential}} and \code{\link{paf.linear}} for
  fractions with ready-to-use exponential and linear relative risk
  respectively.
  
  For more information on kernels see \code{\link[stats]{density}}
}

